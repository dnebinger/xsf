<?xml version="1.0"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" 
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
         
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.xtivia.tools</groupId>
	<artifactId>xsf_sample_app</artifactId>
	<packaging>war</packaging>
	<name>XSF Sample Application</name>
	<version>1.0.0-SNAPSHOT</version>
	
	<properties>
	    <liferay.version>6.2.3</liferay.version>
	    <xsf.version>1.0.0-SNAPSHOT</xsf.version>
        <java.version>1.7</java.version>
        <slf4j.version>1.7.7</slf4j.version>
        <spring.version>4.1.2.RELEASE</spring.version>
	    <jackson.version>1.9.11</jackson.version>
        <junit.version>4.9</junit.version>
        <mockito.version>1.9.5</mockito.version>
        
        <!-- set this property if you want automated deployment to a local Liferay during install phase-->
        <!--liferay.home>/home/xsfuser/apps/liferayce</liferay.home-->
	</properties>
	
	<repositories>
        <repository>
          <id>XSFRepo</id>
          <name>XSFRepo</name>
          <url>file://${project.basedir}/xsf_repo</url>
        </repository>
    </repositories> 
	   
	<build>
        <finalName>xsf-sample-portlet</finalName>
		<plugins>

		    <!--compiler-->			
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.5</version>
				<configuration>
					<encoding>UTF-8</encoding>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>

			<!--resources-->			
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.5</version>
				<configuration><encoding>UTF-8</encoding></configuration>
			</plugin>
			
			<!-- The use of this plugin allows XSF to discover and auto-register (with Spring)
			     your REST services at runtime. It generates a simple XML file used by XSF and places it
			     in the META-INF folder of your WAR file classpath. We HIGHLY recommended its use, but if
			     you need to remove it you will then need to perform required Spring configuration manually.-->
			<plugin>
               <groupId>org.reflections</groupId>
               <artifactId>reflections-maven</artifactId>
               <version>0.9.8</version>
               <executions>
                   <execution>
                       <goals><goal>reflections</goal></goals>
                       <phase>prepare-package</phase>
                   </execution>
               </executions>
               <configuration>
                  <destinations>${project.build.outputDirectory}/META-INF/xsf-reflections.xml</destinations>
               </configuration>
           </plugin>
			
			<!-- Use Ant to copy/deploy the artifact to a local Liferay installation
			     (using hot deploy) during the install phase. Only executes when
			     the property liferay.home is defined -->
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.8</version>
                <executions>
                    <execution>
                        <phase>install</phase>
                        <configuration>
                            <target if="liferay.home">
                                <echo>Deploying WAR file to ${liferay.home}</echo>
                                <copy todir="${liferay.home}/deploy">
                                    <fileset dir="${project.build.directory}">
                                        <include name="**/*.war"/>
                                    </fileset>
                                </copy>
                            </target>
                        </configuration>
                        <goals><goal>run</goal></goals>
                    </execution>
                </executions>
            </plugin>
			   
		</plugins>
		
	</build>

	<dependencies>

        <!-- XSF -->
        <dependency>
		   <groupId>com.xtivia.tools</groupId>
		   <artifactId>xsf</artifactId>
		   <version>${xsf.version}</version>
        </dependency> 
	
	    <!--Liferay-->
		<dependency>
			<groupId>com.liferay.portal</groupId>
			<artifactId>portal-service</artifactId>
			<version>${liferay.version}</version>
			<scope>provided</scope>
		</dependency>	
		
		<!--Portlet API -->
		<dependency>
			<groupId>javax.portlet</groupId>
			<artifactId>portlet-api</artifactId>
			<version>2.0</version>
			<scope>provided</scope>
		</dependency>
		
		<!--Servlet API-->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.0.1</version>
            <scope>provided</scope>
		</dependency>
		
		<!-- Spring -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
			<exclusions>
				<!-- Exclude Commons Logging in favor of SLF4j -->
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				 </exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc-portlet</artifactId>
			<version>${spring.version}</version>
		</dependency>
		
		<!-- cglib/asm -->
		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib</artifactId>
			<version>3.1</version>
		</dependency>
		<dependency>
			<groupId>asm</groupId>
			<artifactId>asm-all</artifactId>
			<version>2.2</version>
		</dependency>
		
		<!-- JSON -->
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-core-asl</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		
		<!--SLF4J Logging-->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
			<scope>provided</scope>
		</dependency>
		
		<!-- Apache Commons -->
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.6</version>
		</dependency>
		
		<!-- JDOM -->
		<dependency>
	      <groupId>org.jdom</groupId>
	      <artifactId>jdom</artifactId>
	      <version>2.0.2</version>
        </dependency>
		
		<!--Testing-->
		<dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
	      <groupId>org.slf4j</groupId>
	      <artifactId>slf4j-simple</artifactId>
	      <version>1.6.2</version>
	      <scope>test</scope>
        </dependency>
        <dependency>
	        <groupId>org.mockito</groupId>
	        <artifactId>mockito-all</artifactId>
	        <version>${mockito.version}</version>
	        <scope>test</scope>
        </dependency>
		
	</dependencies>
	
</project>
